[{"content":"Writing Lisp Code is Easy However good Lisp programming is hard according to Richard P. Gabriel. Lisp is extremely hackable It\u0026rsquo;s easy to create a Lisp Language It\u0026rsquo;s Easy to Make a Lisp Language Domain Specific Writing a parser and compiler for Lisp is way claner than other languages Emacs is configured with Lisp Lisp Helps Me with My Programmatic Thinking Once you know Lisp you think of programming in a very different way. Lisp has heavy ties to Functional Programming My interested in mathematics has motivated my interest in functional programming. A lot of functional programming ideas implemented in other programming languages started in Lisp. A lot of academic computer science work uses Lisp. Common Lisp\u0026rsquo;s Object-Oriented System is Great Development of programs in Lisp advance faster then in other languages Its easy to build a prototype of an idea in Lisp.\nMany programms have started as Emacs packages.\nThe discretionary exportable functionality entrusted to the individual Lisp programmer is more than an order of magnitude greater than that to be found within Pascal enterprises. - Alan J. Perlis\nDevelopment of programs in Lisp proceeds somewhere between 1000 and 5000 times faster then development in \u0026ldquo;modern\u0026rdquo; or \u0026ldquo;improved\u0026rdquo; computer languages. - Douglas Lenat Lex Fridman Podcast\nYou can hire fewer people, by 80%, by developing in Lisp. - Eric Normand\nYou don\u0026rsquo;t need a lot of dependencies to get your project off in Lisp\n","permalink":"https://mekkamagnus.github.io/posts/why-lisp/","summary":"Writing Lisp Code is Easy However good Lisp programming is hard according to Richard P. Gabriel. Lisp is extremely hackable It\u0026rsquo;s easy to create a Lisp Language It\u0026rsquo;s Easy to Make a Lisp Language Domain Specific Writing a parser and compiler for Lisp is way claner than other languages Emacs is configured with Lisp Lisp Helps Me with My Programmatic Thinking Once you know Lisp you think of programming in a very different way.","title":"Why Lisp?"},{"content":"Focus on the Fundamentals In all of my learning of programming and computer science I would like to keep a focus on having strong fundamentals. This desire to have strong fundamentals is what informs my decisions on what to learn and in what order. Languages JavaScript Many sources online say you should take either JavaScript or Python as your first language. I like that JavaScript has more of a closeness to C-syntax since C is a high priority on my list of languages to learn. With JavaScript I can build and interact with the full stack of web development. I can work from browser to server. This means the skills I learn can be applied to more places. JavaScript is thought of having a closeness to Lisp. So this also feeds in to my desire to learn Lisp. In learning JavaScript I believe it will be easy to crossover into Python. But I don\u0026rsquo;t think it would be as easy the other way around. In the end, Python being a very important language, I will still get to learning it at some point no matter what. It\u0026rsquo;s important to really grokk one language. Then it will be easier to pick up the rest because I will actually understand the core principles of programming. Sort of like mastering one key in song writing. Then later it will be easy to pick up the rest of the keys. JavaScript works in the browser which means that I can build little applications that can run in browser. No need to download anything. Lisp/Elisp I learned lisp because of reading that it will help you to be a better programming. However they also say it shouldn\u0026rsquo;t be your first language. As a result of learning lisp I was lead towards Emacs Emacs I believe also helps me to be a better programmer All of the greatest engineers in the world use emacs\nEmacs is the 100 year editor\nYou have to be way smart to use emacs well and it makes you incredibily powerful if you can master it.\nI find there is a certain power in being able to customize your tools. And once you get the hang of it customizing it is actually quite simple\nThe great programmers, on the other hand, will adapt their environment to suit themselves, in such ways as writing scripts or their own tools, or extending their tools.\nEmacs gives me inspiration to keep learing lisp and by extension programming fundamentals in general. Emacs is a mix of C and [Emacs-]Lisp so it re enforces my skills in each of those areas. C C, even more so then C++, seems to be at the core of computer programming and computer science in general. With C I\u0026rsquo;m indirectly developing skills in most other languages. C gives you an appreciation of how computers work. Blockchain I find blockchain technology facinating. I love the mix of technology, economics, and finance. I\u0026rsquo;m intersted in the GameFi space. But I\u0026rsquo;m also very interested in DeFi, general tokenomics and DAO space. Summary The tech, computer science and programming landscape is vast. The things above are my core interest but for sure I\u0026rsquo;m very intersted in various aspects of computer science and tech. ","permalink":"https://mekkamagnus.github.io/posts/tech_i_m_interested_in/","summary":"Focus on the Fundamentals In all of my learning of programming and computer science I would like to keep a focus on having strong fundamentals. This desire to have strong fundamentals is what informs my decisions on what to learn and in what order. Languages JavaScript Many sources online say you should take either JavaScript or Python as your first language. I like that JavaScript has more of a closeness to C-syntax since C is a high priority on my list of languages to learn.","title":"Tech I'm Intersted In"}]