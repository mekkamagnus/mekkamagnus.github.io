<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Monads on Mekael Turner Dev Blog</title><link>https://mekkamagnus.github.io/tags/monads/</link><description>Recent content in Monads on Mekael Turner Dev Blog</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Sat, 07 Oct 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://mekkamagnus.github.io/tags/monads/index.xml" rel="self" type="application/rss+xml"/><item><title>List Monad in JavaScript</title><link>https://mekkamagnus.github.io/posts/list-monad/</link><pubDate>Sat, 07 Oct 2023 00:00:00 +0800</pubDate><guid>https://mekkamagnus.github.io/posts/list-monad/</guid><description>&lt;h2 id="thoughts">Thoughts&lt;/h2>
&lt;p>I&amp;rsquo;m writing this more as a way to document and organize my thoughts around the list monad.&lt;/p>
&lt;p>This is a very important monad.&lt;/p>
&lt;p>A map of functional concepts I&amp;rsquo;m currently studying can be found at &lt;a href="https://mekkamagnus.github.io/posts/functional-programming/">Functional Programming Concepts&lt;/a>.&lt;/p>
&lt;h2 id="the-code">The Code&lt;/h2>
&lt;p>&lt;a id="code-snippet--list-monad">&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">List&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span> =&amp;gt; ({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">list&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">map&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">fn&lt;/span> =&amp;gt; &lt;span style="color:#a6e22e">List&lt;/span>(&lt;span style="color:#a6e22e">list&lt;/span>.&lt;span style="color:#a6e22e">map&lt;/span>(&lt;span style="color:#a6e22e">fn&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fold&lt;/span>&lt;span style="color:#f92672">:&lt;/span> (&lt;span style="color:#a6e22e">fn&lt;/span>, &lt;span style="color:#a6e22e">initialValue&lt;/span>) =&amp;gt; &lt;span style="color:#a6e22e">List&lt;/span>(&lt;span style="color:#a6e22e">list&lt;/span>.&lt;span style="color:#a6e22e">reduce&lt;/span>(&lt;span style="color:#a6e22e">fn&lt;/span>, &lt;span style="color:#a6e22e">initialValue&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">foldMap&lt;/span>(&lt;span style="color:#a6e22e">monoid&lt;/span>, &lt;span style="color:#a6e22e">empty&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">mappedList&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span>.&lt;span style="color:#a6e22e">reduce&lt;/span>(&lt;span style="color:#a6e22e">fn&lt;/span>, &lt;span style="color:#a6e22e">initialValue&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">mappedList&lt;/span>.&lt;span style="color:#a6e22e">reduce&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">accumalator&lt;/span>, &lt;span style="color:#a6e22e">monoidValue&lt;/span>) =&amp;gt; &lt;span style="color:#a6e22e">accumalator&lt;/span>.&lt;span style="color:#a6e22e">concat&lt;/span>(&lt;span style="color:#a6e22e">monoidValue&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">empty&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">List&lt;/span>(&lt;span style="color:#a6e22e">result&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">extract&lt;/span>&lt;span style="color:#f92672">:&lt;/span> () =&amp;gt; &lt;span style="color:#a6e22e">list&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="example">Example&lt;/h3>
&lt;p>Here is a sample implementation of this list monad.&lt;/p></description></item></channel></rss>