<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>javascript on Mekael Turner Dev Blog</title><link>https://mekkamagnus.github.io/tags/javascript/</link><description>Recent content in javascript on Mekael Turner Dev Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 07 Oct 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://mekkamagnus.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Functional Programming Concepts</title><link>https://mekkamagnus.github.io/posts/functional-programming/</link><pubDate>Sat, 07 Oct 2023 00:00:00 +0800</pubDate><guid>https://mekkamagnus.github.io/posts/functional-programming/</guid><description>Overview This is essential a map of content for functional programming concepts that I&amp;rsquo;m learning.</description></item><item><title>List Monad in JavaScript</title><link>https://mekkamagnus.github.io/posts/list-monad/</link><pubDate>Sat, 07 Oct 2023 00:00:00 +0800</pubDate><guid>https://mekkamagnus.github.io/posts/list-monad/</guid><description>Thoughts I&amp;rsquo;m writing this more as a way to document and organize my thoughts around the list monad.
This is a very important monad.
The Code export const List = list =&amp;gt; ({ list, map: fn =&amp;gt; List(list.map(fn)), fold: (fn, initialValue) =&amp;gt; List(list.reduce(fn, initialValue)), foldMap(monoid, empty) { const mappedList = list.reduce(fn, initialValue); const result = mappedList.reduce( (accumalator, monoidValue) =&amp;gt; accumalator.concat(monoidValue), empty, ); return List(result); }, extract: () =&amp;gt; list, }); Example Here is a sample implementation of this list monad.</description></item><item><title>Why Lisp?</title><link>https://mekkamagnus.github.io/posts/why-lisp/</link><pubDate>Wed, 02 Nov 2022 00:00:00 +0800</pubDate><guid>https://mekkamagnus.github.io/posts/why-lisp/</guid><description>Writing Lisp Code is Easy However good Lisp programming is hard according to Richard P. Gabriel. Lisp is extremely hackable It&amp;rsquo;s easy to create a Lisp Language It&amp;rsquo;s Easy to Make a Lisp Language Domain Specific Writing a parser and compiler for Lisp is way claner than other languages Emacs is configured with Lisp Lisp Helps Me with My Programmatic Thinking Once you know Lisp you think of programming in a very different way.</description></item><item><title>Tech I'm Intersted In</title><link>https://mekkamagnus.github.io/posts/tech_i_m_interested_in/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0800</pubDate><guid>https://mekkamagnus.github.io/posts/tech_i_m_interested_in/</guid><description>Focus on the Fundamentals In all of my learning of programming and computer science I would like to keep a focus on having strong fundamentals. This desire to have strong fundamentals is what informs my decisions on what to learn and in what order. Languages JavaScript Many sources online say you should take either JavaScript or Python as your first language. I like that JavaScript has more of a closeness to C-syntax since C is a high priority on my list of languages to learn.</description></item></channel></rss>